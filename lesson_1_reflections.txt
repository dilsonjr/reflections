How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was easy to determine what the problem was with the file and quickly fix it. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would save a great deal of time and would make corrections more precise and easier. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A pro would be to avoid commits that are not complete logically. A con would be that if you commit too frequently you would have too many commits and it would be difficult to track.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git was designed for code, where several files may need to be updated or saved together

How can you use the commands git log and git diff to view the history of files?

    We can use git log to list commits and use git diff to view the differences between two commits. Colors can be used to make viewing easier.

How might using version control make you more confident to make changes that
could break something?

    Version control allows us to restore previous versions of our code so that we can go back to a version before a bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here